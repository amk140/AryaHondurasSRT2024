---
title: "AryaHondurasSRT2024"
---

## Quarto

```{r}
library(tidyverse)
library(psych)
library(readxl)
library(dplyr)
library(knitr)
library(foreign)
library(ggplot2)
library(magrittr)
library(diagram)
library(igraph)
library(showtext)
```

```{r}
library(readr)
qual <- read_csv("RStudio_GitHub Merged Data (QUAL) - Qual.csv")
View(qual)
```

```{r}
#pie chart for clinic versus community surveys
library(magrittr)

qual_tibble <- data.frame(category = c("Clinic", "Community"),
                    slices = c(170, 266))

qual_tibble %>%
  mutate(pct = round(slices / sum(slices) * 100)) %>%
  mutate(labels = paste(category, pct, "%", sep = " ")) %>%
  with({
    pie(slices, labels = labels, col = rainbow(length(labels)),
        main = "Clinic/Community")
  })
```

```{r}
library(readr)
qual_edit <- read_csv("arya copy of RStudio_GitHub Merged Data (QUAL) - Qual.csv")
View(qual_edit)
```

```{r}
qual_edit |>
  filter(preg_score != 'NA')|>
  filter(colonia == 'No') |>
 count(preg_score) |>
mutate(prob = n/sum(n))
```

```{r}
qual |>
  count(vax_location) |>
  mutate(prob = n/sum(n))
```

```{r}
#code to make plot for Survey Location Distribution
qual |>
  ggplot( aes(x = survey_location, fill = survey_location)) + 
  geom_bar() +
  labs(x = "Survey Location", y = "# Surveys Administered", title = "Distribution of Survey Location", fill = "Survey Location")
ggsave("plot1.png")
```

```{r}
#relation to child plot w/o numbers
qual |>
  filter (relation_to_child != "NA") |>
  ggplot( aes(x = relation_to_child, fill = relation_to_child)) + 
  geom_bar() +
  labs(x = "Relationship to Child", y = "# of Respondents", title = "Distribution of Respondent Relationships to Child") +
  theme(axis.text.x = element_blank())
  ggsave("plot1.png")
```

```{r}
qualnew1 <- qual %>%
  mutate(vaxedatce = if_else(grepl("CE", "Centro", vax_location), "Contains CE", "Does not contain CE"))
```

```{r}
#Distribution of Respondent Relationships to Child Plot
library(ggplot2)
library(dplyr)

# Filter out NA values (if any)
qual_relationship <- qual %>%
  filter(!is.na(relation_to_child))

# Calculate counts for each category
count_df <- qual %>%
  count(relation_to_child)

# Plot the bar graph with counts on top
ggplot(data = count_df, aes(x = relation_to_child, y = n, fill = relation_to_child)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = n), vjust = -0.5, size = 2.6, color = "black") +  # Add text labels on top of bars
  labs(x = "Relationship to Child", y = "# of Respondents", title = "Distribution of Respondent Relationships to Child", fill = "Relation to Child") +
  theme(axis.text.x = element_blank())
  ggsave("plot2.png")
```

```{r}
qualnew |>
  filter(relation_to_child != 'NA')|>
  count(relation_to_child) |>
  mutate(prob = n/sum(n))
```

```{r}
#Distribution of Education Levels by Island Region Plot
library(ggplot2)
library(dplyr)
library(forcats)  

qual_filtered <- qual %>%
  filter(!is.na(last_grade_category)) %>%
  mutate(
    last_grade_category = as.factor(last_grade_category),
    last_grade_category = fct_relevel(last_grade_category, "4", "3", "2", "1", "0"),
    island_region = as.factor(island_region),
    island_region = fct_relevel(island_region, "1", "2", "3", "4", "5")
  )

# Calculate counts and proportions
qual_counts <- qual_filtered %>%
  group_by(island_region, last_grade_category) %>%
  summarise(count = n(), .groups = 'drop') %>%
  mutate(proportion = count / sum(count))

# Plotting
ggplot(qual_counts, aes(x = island_region, y = proportion, fill = last_grade_category)) +
  geom_bar(position = "fill", stat = "identity") +
  geom_text(aes(label = count), position = position_fill(vjust = 0.5), size = 3) +
  labs(x = "Island Region", y = "Proportion", title = "Distribution of Education Levels by Island Region", fill = "Education Level")
ggsave("plot3.png")

```

```{r}
#Distribution of Education Levels by La Colonia vs Not Plot
library(ggplot2)
library(dplyr)
library(forcats)  

qual_filtered <- qual %>%
  filter(!is.na(last_grade_category)) %>%
  mutate(
    last_grade_category = as.factor(last_grade_category),
    last_grade_category = fct_relevel(last_grade_category, "4", "3", "2", "1", "0"),
    colonia = as.factor(colonia),
    colonia = fct_relevel(colonia, "La Colonia", "Non-Colonia")
  )

# Calculate counts and proportions
qual_counts <- qual_filtered %>%
  group_by(colonia, last_grade_category) %>%
  summarise(count = n(), .groups = 'drop') %>%
  mutate(proportion = count / sum(count))

# Plotting
ggplot(qual_counts, aes(x = colonia, y = proportion, fill = last_grade_category)) +
  geom_bar(position = "fill", stat = "identity") +
  geom_text(aes(label = count), position = position_fill(vjust = 0.5), size = 3) +
  labs(x = "La Colonia - Yes or No", y = "Proportion", title = "Distribution of Education Levels in La Colonia versus Non-Colonia Communities", fill = "Education Level")
ggsave("plot3.png")
```

```{r}
#distribution of where respondents live on the island
library(ggplot2)
library(dplyr)

# Filter out NA values (if any)
qualnew <- qual %>%
  filter(!is.na(island_region))

# Calculate counts for each category
count_df <- qualnew %>%
  count(island_region)

# Plot the bar graph with counts on top
ggplot(data = count_df, aes(x = island_region, y = n, fill = island_region)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = n), vjust = -0.5, size = 2.3, color = "black") +  # Add text labels on top of bars
  labs(x = "Island Region", y = "# of Respondents", title = "Distribution of Respondent Residences", fill = "Region") +
  theme(axis.text.x = element_blank())
  ggsave("plot2.png")
```

```{r}
library(ggplot2)
library(dplyr)

qualnew1 <- qual_edit %>%
  filter(!is.na(last_grade))

ggplot(qualnew1, aes(x = last_grade, y = preg_score)) +
  geom_point() +
  labs(title = "Scatter Plot: Last Grade Completed vs. Question Response Score",
       x = "Last Grade Completed",
       y = "Question Response Score") +
  theme_minimal()
ggplot(your_data, aes(x = last_grade, y = preg_score)) +
  geom_point(color = "#FF5733", size = 3, alpha = 0.8) +  # Custom color, size, and transparency
  labs(title = "Scatter Plot: Last Grade Completed vs. Question Response Score",
       x = "Last Grade Completed",
       y = "Question Response Score") +
  geom_smooth(method = "lm", se = FALSE, color = "#2E86C1") +  # Add linear regression line
  theme_minimal()
```

```{r}
#Plotting percent of questions answered 'Yes' versus education level
library(tidyr)
library(ggplot2)
df <- data.frame(
  Question = c("Question 1", "Question 2", "Question 3", "Question 4", "Question 5", "Question 6"),
  jour_Yes = c(1.0, 0.7391, 0.7826, 0.7826, 1.0, 1.0),
  ihree_Yes = c(0.8936, 0.7357, 0.70, 0.6978, 0.9929, 0.9929),
  hwo_Yes = c(0.8673, 0.7857, 0.6495, 0.7010, 1.0, 0.9898),
  gne_Yes = c(0.8217, 0.7197, 0.6859, 0.8333, 0.9936,	0.9744),
  fero_Yes = c(0.60,	0.60, 0.40, 0.80, 1.0, 1.0)
)

# Plot using ggplot2
library(tidyr)
df_long <- gather(df, key = "Category", value = "Percentage", -Question)

# Plot using ggplot2
ggplot(df_long, aes(x = Question, y = Percentage, fill = Category)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(label = paste0(round(Percentage * 100), "%"), 
              y = Percentage, 
              group = Category), 
            position = position_dodge(width = 0.9), 
            vjust = -0.5, 
            size = 1.5) +
  labs(title = "Percentage of 'Yes' Responses by Question and Education Level",
       x = "Question",
       y = "Percentage", fill = "Education Level") +
  scale_fill_manual(values = c("jour_Yes" = "#FF4345","ihree_Yes" = "#FFFF2359","hwo_Yes" = "#249586","gne_Yes" = "#FF9999","fero_Yes" = "#FF9920"),
                    labels = c("0", "1","2","3","4")) +
  theme_minimal()

```

```{r}
#plot showing distribution of vaccination locations
library(magrittr)

qual_tibble <- data.frame(category = c("CE", "Hospital", "Centro de Salud", "Bridgade","Other"), 
                          slices = c(118, 181, 91, 34, 31))

qual_tibble %>%
  mutate(pct = round(slices / sum(slices) * 100)) %>%
  mutate(labels = paste(category, pct, "%", sep = " ")) %>%
  with({
    pie(.$slices, labels = .$labels, col = rainbow(nrow(.)),
        main = "Distribution of Vaccination Locations")
  })
```

```{r}
#Plotting percent of questions answered 'Yes' versus island region
library(tidyr)
library(ggplot2)
df <- data.frame(
  Question = c("Question 1", "Question 2", "Question 3", "Question 4", "Question 5", "Question 6"),
  eive_Yes = c(1,	0.7142857,	0.8571429,	0.8571429,	1,	1),
  dour_Yes = c(0.8695652, 0.6956522,	0.82608696,	0.73913043,	1,	1),
  chree_Yes = c(0.83606557,	0.6721311,	0.7377049,	0.73770492,	1,	0.96721311),
  bwo_Yes = c(0.8795181,	0.6746988,	0.686747,	0.72289157,	1,	0.98795181),
  ane_Yes = c(0.85098039,	0.78823529,	0.654902,	0.77254902,	0.992156863,	0.988235294)
)

# Plot using ggplot2
library(tidyr)
df_long <- gather(df, key = "Category", value = "Percentage", -Question)

# Plot using ggplot2
ggplot(df_long, aes(x = Question, y = Percentage, fill = Category)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(label = paste0(round(Percentage * 100), "%"), 
              y = Percentage, 
              group = Category), 
            position = position_dodge(width = 0.9), 
            vjust = -0.5, 
            size = 1.2) +
  labs(title = "Percentage of 'Yes' Responses by Question and Island Region",
       x = "Question",
       y = "Percentage", fill = "Island Region") +
  scale_fill_manual(values = c("eive_Yes" = "#FF1124","dour_Yes" = "#024512","chree_Yes" = "#249586","bwo_Yes" = "#FFF449","ane_Yes" = "#FF9920"),
                    labels = c("1", "2","3","4","5")) +
  theme_minimal()
```

```{r}
library(tidyr)
library(ggplot2)
df <- data.frame(
  Question = c("Question 1", "Question 2", "Question 3", "Question 4", "Question 5", "Question 6"),
  Non_Colonia_Yes = c(0.877, 0.717, 0.713, 0.713, 0.996, 0.984),
  Colonia_Yes = c(0.832, 0.778, 0.649, 0.816, 0.995, 0.989)
)



# Plot using ggplot2
library(tidyr)
df_long <- gather(df, key = "Category", value = "Percentage", -Question)

# Plot using ggplot2
ggplot(df_long, aes(x = Question, y = Percentage, fill = Category)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(label = paste0(round(Percentage * 100), "%"), 
                y = Percentage,
                group = Category)
            position = position_dodge(width = 0.9), 
            vjust = -0.5, 
            size = 3) +
  labs(title = "Percentage of 'Yes' Responses by Question and Colonia status",
       x = "Question",
       y = "Percentage") +
  scale_fill_manual(values = c("Non_Colonia_Yes" = "#009999", "Colonia_Yes" = "#FF9933"),
                  labels = c("La Colonia", "Non-Colonia")) +
  theme_minimal()
ggsave("coloniabeliefs.png")
```

```{r}

library(tidyr)
library(ggplot2)
df <- data.frame(
  Vaccine = c("aaHep B", "abBCG", "acPolio VPI 1", "adPolio VPI 2", "aePolio VOP 1", "afPolio VOP 2", "agPenta 1", "ahPenta 2", "aiPenta3","ajnuemo1","aknuemo2","alnuemo3","amrota1","anrota2","aommr1","apmmr2","aqhepA","arDPT1","asDPT2","atvph1","autet"),
  Colonia_Yes = c(0.9378882, 0.9689441, 0.8447205, 0.7, 0.9551282, 0.9379845, 0.9937888, 0.98125, 0.9679487, 0.9689441, 0.95625, 0.9423077, 0.9813665, 0.96875, 0.971831, 0.8294574, 0.4859155, 0.875969, 0.8068182, 0.2, 0.4285714),
  Non_Colonia_Yes = c(0.9541284, 0.9724771, 0.8888889, 0.7663551, 0.9081633, 0.8947368, 0.9722222, 0.9252336, 0.8979592, 0.9722222, 0.9158879, 0.9081633, 0.9722222, 0.9158879, 0.9090909, 0.8026316, 0.5454545, 0.8947368, 0.7804878, 0, 0.5)
)


# Plot using ggplot2
library(tidyr)
df_long <- gather(df, key = "Category", value = "Percentage", -Vaccine)

# Plot using ggplot2
ggplot(df_long, aes(x = Vaccine, y = Percentage, fill = Category)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(label = paste0(round(Percentage * 100), "%"), 
                y = Percentage, 
                group = Category), 
            position = position_dodge(width = 0.9), 
            vjust = -0.5, 
            size = 1.2) +
  labs(title = "Vaccine Adherence in La Colonia vs Non-Colonia Communities",
       x = "Vaccine",
       y = "Percentage", fill = "Category") +
    scale_fill_manual(values = c("Colonia_Yes" = "#6495ED","Non_Colonia_Yes" = "#CD5C5C"),
                    labels = c("La Colonia", "Non-Colonia")) +
  scale_x_discrete(labels = c("Hepatitis B", "BCG", "Polio VPI 1", "Polio VPI 2", "Polio VOP 1", "Polio VOP 2", "Pentavalent 1", "Pentavalent 2", "Pentavalent 3", "Pneumococcal 1","Pneumococcal 2","Pneumococcal 3","Rotavirus 1","Rotavirus 2", "MMR 1","MMR 2", "Hepatitis A", "DPT 1", "DPT 2","HPV 1","Tetanus (Td)")) +  # Set x-axis labels
 theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 80, vjust = 0.2, hjust = 0.03))

```

```{r}
#Correlational analysis plot: education level vs response score
library(tidyr)
library(ggplot2)

df <- data.frame(
  last_grade = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13),
  preg_score = c(4.7, 5.6, 5.1, 5.575, 5.3, 5.5, 5.1875, 5.05, 5.113636, 5.3173076923, 5.53333, 5.167, 5.261682243, 5.4346826087)
)

# Convert last_grade to factor to display all values on x-axis

# Create the plot with ggplot2
ggplot(df, aes(x = last_grade, y = preg_score)) +
  geom_point(color = "#000045", size = 3, alpha = 0.8) +  # Custom color, size, and transparency
  labs(title = "Last Grade of School Completed vs. Average Response Score",
       x = "Last Grade Completed",
       y = "Question Response Score") +
  geom_smooth(method = "lm", se = FALSE, color = "#2E86C1") +  # Add linear regression line
  scale_x_continuous(breaks = seq(0, 13, by = 1)) + 
  scale_y_continuous(limits = c(4,6), breaks = seq (4, 6, by = 0.2)) +  # Set y-axis limits from 4 to 6
  theme_minimal()

# Fit linear regression model
lm_model <- lm(preg_score ~ as.numeric(last_grade), data = df)  # Note: Convert factor to numeric for lm

# Display summary of the linear regression model
summary(lm_model)
```

```{r}
library(tidyr)
library(ggplot2)

df <- data.frame(
  colonia = c("No", "Yes"),
  preg_score = c(5.24795, 5.3026027027)
)

# Convert colonia to factor
df$colonia <- factor(df$colonia, levels = c("No", "Yes"))

# Create the plot with ggplot2
ggplot(df, aes(x = colonia, y = preg_score)) +
  geom_point(color = "#000045", size = 3, alpha = 0.8) +  # Custom color, size, and transparency
  labs(title = "La Colonia or Not vs. Average Response Score",
       x = "La Colonia or Not",
       y = "Question Response Score") +
  geom_smooth(method = "lm", se = FALSE, aes(group = 1), color = "#2E86C1") +  # Add linear regression line
  scale_y_continuous(limits = c(4, 6), breaks = seq(4, 6, by = 0.2)) +  # Set y-axis limits from 4 to 6
  theme_minimal()

# Fit linear regression model
lm_model <- lm(preg_score ~ colonia, data = df)

# Display summary of the linear regression model
summary(lm_model)
```

```{r}
library(tidyr)
library(ggplot2)

df <- data.frame(
  colonia = c(0, 1),
  preg_score = c(5.24795, 5.3026027027)
)



# Create the plot with ggplot2
ggplot(df, aes(x = colonia, y = preg_score)) +
  geom_point(color = "#000045", size = 3, alpha = 0.8) +  # Custom color, size, and transparency
  labs(title = "La Colonia or Not vs. Average Response Score",
       x = "La Colonia or No",
       y = "Question Response Score") +
  stat_smooth(method = "lm", se = FALSE, color = "#2E86C1") +  # Add linear regression line
  scale_y_continuous(limits = c(4, 6)) +  # Set y-axis limits from 4 to 6
  theme_minimal()

# Fit linear regression model
lm_model <- lm(preg_score ~ as.numeric(colonia), data = df)  # Note: Convert factor to numeric for lm

# Display summary of the linear regression model
summary(lm_model)
```

```{r}
qual_edit <- qual_edit %>%
  ggplot(aes(x = last_grade, y = preg_score)) +
  geom_point() +
  scale_y_continuous(limits = c(0, 1.25)) +
  geom_smooth(method = "lm", se = FALSE) +
  theme_minimal()
```

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.
